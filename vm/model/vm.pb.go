// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vm/model/vm.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Boot类型
type BootType int32

const (
	BootType_BOOT_FILE  BootType = 0
	BootType_BOOT_SHARE BootType = 1
)

var BootType_name = map[int32]string{
	0: "BOOT_FILE",
	1: "BOOT_SHARE",
}

var BootType_value = map[string]int32{
	"BOOT_FILE":  0,
	"BOOT_SHARE": 1,
}

func (x BootType) String() string {
	return proto.EnumName(BootType_name, int32(x))
}

func (BootType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36cea89809ea3e36, []int{0}
}

// 虚拟机数据结构
type LibVm struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cpus                 int32             `protobuf:"varint,3,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Mem                  int32             `protobuf:"varint,4,opt,name=mem,proto3" json:"mem,omitempty"`
	Host                 string            `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	BootType             BootType          `protobuf:"varint,6,opt,name=bootType,proto3,enum=BootType" json:"bootType,omitempty"`
	Network              *NetInfo          `protobuf:"bytes,7,opt,name=network,proto3" json:"network,omitempty"`
	Disk                 *VDisk            `protobuf:"bytes,8,opt,name=disk,proto3" json:"disk,omitempty"`
	Region               string            `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Zone                 string            `protobuf:"bytes,10,opt,name=zone,proto3" json:"zone,omitempty"`
	OsInfo               map[string]string `protobuf:"bytes,11,rep,name=osInfo,proto3" json:"osInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Label                map[string]string `protobuf:"bytes,12,rep,name=label,proto3" json:"label,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LibVm) Reset()         { *m = LibVm{} }
func (m *LibVm) String() string { return proto.CompactTextString(m) }
func (*LibVm) ProtoMessage()    {}
func (*LibVm) Descriptor() ([]byte, []int) {
	return fileDescriptor_36cea89809ea3e36, []int{0}
}

func (m *LibVm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibVm.Unmarshal(m, b)
}
func (m *LibVm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibVm.Marshal(b, m, deterministic)
}
func (m *LibVm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibVm.Merge(m, src)
}
func (m *LibVm) XXX_Size() int {
	return xxx_messageInfo_LibVm.Size(m)
}
func (m *LibVm) XXX_DiscardUnknown() {
	xxx_messageInfo_LibVm.DiscardUnknown(m)
}

var xxx_messageInfo_LibVm proto.InternalMessageInfo

func (m *LibVm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LibVm) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LibVm) GetCpus() int32 {
	if m != nil {
		return m.Cpus
	}
	return 0
}

func (m *LibVm) GetMem() int32 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *LibVm) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LibVm) GetBootType() BootType {
	if m != nil {
		return m.BootType
	}
	return BootType_BOOT_FILE
}

func (m *LibVm) GetNetwork() *NetInfo {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *LibVm) GetDisk() *VDisk {
	if m != nil {
		return m.Disk
	}
	return nil
}

func (m *LibVm) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *LibVm) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *LibVm) GetOsInfo() map[string]string {
	if m != nil {
		return m.OsInfo
	}
	return nil
}

func (m *LibVm) GetLabel() map[string]string {
	if m != nil {
		return m.Label
	}
	return nil
}

//网络信息
type NetInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Mode                 string   `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Ipv4Addr             string   `protobuf:"bytes,5,opt,name=ipv4Addr,proto3" json:"ipv4Addr,omitempty"`
	Ipv6Addr             string   `protobuf:"bytes,6,opt,name=ipv6Addr,proto3" json:"ipv6Addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetInfo) Reset()         { *m = NetInfo{} }
func (m *NetInfo) String() string { return proto.CompactTextString(m) }
func (*NetInfo) ProtoMessage()    {}
func (*NetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_36cea89809ea3e36, []int{1}
}

func (m *NetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetInfo.Unmarshal(m, b)
}
func (m *NetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetInfo.Marshal(b, m, deterministic)
}
func (m *NetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetInfo.Merge(m, src)
}
func (m *NetInfo) XXX_Size() int {
	return xxx_messageInfo_NetInfo.Size(m)
}
func (m *NetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetInfo proto.InternalMessageInfo

func (m *NetInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NetInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NetInfo) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *NetInfo) GetIpv4Addr() string {
	if m != nil {
		return m.Ipv4Addr
	}
	return ""
}

func (m *NetInfo) GetIpv6Addr() string {
	if m != nil {
		return m.Ipv6Addr
	}
	return ""
}

//磁盘信息
type VDisk struct {
	SystemDisk           *VmDisk   `protobuf:"bytes,1,opt,name=systemDisk,proto3" json:"systemDisk,omitempty"`
	DataDisk             []*VmDisk `protobuf:"bytes,2,rep,name=dataDisk,proto3" json:"dataDisk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VDisk) Reset()         { *m = VDisk{} }
func (m *VDisk) String() string { return proto.CompactTextString(m) }
func (*VDisk) ProtoMessage()    {}
func (*VDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor_36cea89809ea3e36, []int{2}
}

func (m *VDisk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VDisk.Unmarshal(m, b)
}
func (m *VDisk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VDisk.Marshal(b, m, deterministic)
}
func (m *VDisk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VDisk.Merge(m, src)
}
func (m *VDisk) XXX_Size() int {
	return xxx_messageInfo_VDisk.Size(m)
}
func (m *VDisk) XXX_DiscardUnknown() {
	xxx_messageInfo_VDisk.DiscardUnknown(m)
}

var xxx_messageInfo_VDisk proto.InternalMessageInfo

func (m *VDisk) GetSystemDisk() *VmDisk {
	if m != nil {
		return m.SystemDisk
	}
	return nil
}

func (m *VDisk) GetDataDisk() []*VmDisk {
	if m != nil {
		return m.DataDisk
	}
	return nil
}

// VmDisk信息
type VmDisk struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Size                 int64             `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Info                 map[string]string `protobuf:"bytes,4,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VmDisk) Reset()         { *m = VmDisk{} }
func (m *VmDisk) String() string { return proto.CompactTextString(m) }
func (*VmDisk) ProtoMessage()    {}
func (*VmDisk) Descriptor() ([]byte, []int) {
	return fileDescriptor_36cea89809ea3e36, []int{3}
}

func (m *VmDisk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmDisk.Unmarshal(m, b)
}
func (m *VmDisk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmDisk.Marshal(b, m, deterministic)
}
func (m *VmDisk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmDisk.Merge(m, src)
}
func (m *VmDisk) XXX_Size() int {
	return xxx_messageInfo_VmDisk.Size(m)
}
func (m *VmDisk) XXX_DiscardUnknown() {
	xxx_messageInfo_VmDisk.DiscardUnknown(m)
}

var xxx_messageInfo_VmDisk proto.InternalMessageInfo

func (m *VmDisk) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VmDisk) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VmDisk) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VmDisk) GetInfo() map[string]string {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterEnum("BootType", BootType_name, BootType_value)
	proto.RegisterType((*LibVm)(nil), "libVm")
	proto.RegisterMapType((map[string]string)(nil), "libVm.LabelEntry")
	proto.RegisterMapType((map[string]string)(nil), "libVm.OsInfoEntry")
	proto.RegisterType((*NetInfo)(nil), "NetInfo")
	proto.RegisterType((*VDisk)(nil), "VDisk")
	proto.RegisterType((*VmDisk)(nil), "VmDisk")
	proto.RegisterMapType((map[string]string)(nil), "VmDisk.InfoEntry")
}

func init() { proto.RegisterFile("vm/model/vm.proto", fileDescriptor_36cea89809ea3e36) }

var fileDescriptor_36cea89809ea3e36 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x66, 0xed, 0xd8, 0xb1, 0xc7, 0x10, 0xa5, 0x23, 0x84, 0x56, 0x3e, 0x59, 0x46, 0x55, 0x4d,
	0x0f, 0xae, 0x14, 0x10, 0x14, 0x6e, 0xad, 0x08, 0xa2, 0x52, 0x45, 0xa4, 0xa5, 0xe4, 0x8a, 0x1c,
	0xbc, 0x80, 0x15, 0xdb, 0x1b, 0xd9, 0x6e, 0x50, 0xfa, 0x0e, 0xbc, 0x05, 0x4f, 0xc2, 0x93, 0xa1,
	0x1d, 0x6f, 0xdc, 0x22, 0x71, 0x00, 0x6e, 0xdf, 0xdf, 0x6e, 0x76, 0xe6, 0x73, 0xe0, 0x60, 0x5b,
	0x9d, 0x54, 0x2a, 0x97, 0xe5, 0xc9, 0xb6, 0x4a, 0x37, 0x8d, 0xea, 0x54, 0xfc, 0xd3, 0x06, 0xa7,
	0x2c, 0x56, 0xcb, 0x0a, 0x27, 0x60, 0x15, 0x39, 0x67, 0x11, 0x4b, 0x7c, 0x61, 0x15, 0x39, 0x22,
	0x8c, 0xea, 0xac, 0x92, 0xdc, 0x22, 0x85, 0xb0, 0xd6, 0x3e, 0x6d, 0xae, 0x5b, 0x6e, 0x47, 0x2c,
	0x71, 0x04, 0x61, 0x9c, 0x82, 0x5d, 0xc9, 0x8a, 0x8f, 0x48, 0xd2, 0x50, 0xa7, 0xbe, 0xaa, 0xb6,
	0xe3, 0x4e, 0x7f, 0x52, 0x63, 0x3c, 0x04, 0x6f, 0xa5, 0x54, 0x77, 0xb5, 0xdb, 0x48, 0xee, 0x46,
	0x2c, 0x99, 0xcc, 0xfc, 0xf4, 0xdc, 0x08, 0x62, 0xb0, 0x30, 0x86, 0x71, 0x2d, 0xbb, 0x6f, 0xaa,
	0x59, 0xf3, 0x71, 0xc4, 0x92, 0x60, 0xe6, 0xa5, 0xef, 0x64, 0x77, 0x51, 0x7f, 0x56, 0x62, 0x6f,
	0x60, 0x08, 0xa3, 0xbc, 0x68, 0xd7, 0xdc, 0xa3, 0x80, 0x9b, 0x2e, 0x5f, 0x17, 0xed, 0x5a, 0x90,
	0x86, 0x8f, 0xc0, 0x6d, 0xe4, 0x97, 0x42, 0xd5, 0xdc, 0xa7, 0x1f, 0x37, 0x4c, 0x3f, 0xe9, 0x46,
	0xd5, 0x92, 0x43, 0xff, 0x24, 0x8d, 0xf1, 0x18, 0x5c, 0xd5, 0xea, 0xab, 0x79, 0x10, 0xd9, 0x49,
	0x30, 0xc3, 0x94, 0x16, 0x91, 0x2e, 0x48, 0x9c, 0xd7, 0x5d, 0xb3, 0x13, 0x26, 0x81, 0x47, 0xe0,
	0x94, 0xd9, 0x4a, 0x96, 0xfc, 0x3e, 0x45, 0x0f, 0x4c, 0xf4, 0x52, 0x6b, 0x7d, 0xb2, 0xf7, 0xc3,
	0x97, 0x10, 0xdc, 0x39, 0xaf, 0x97, 0xb3, 0x96, 0x3b, 0xb3, 0x55, 0x0d, 0xf1, 0x21, 0x38, 0xdb,
	0xac, 0xbc, 0xde, 0xef, 0xb5, 0x27, 0xaf, 0xac, 0x53, 0x16, 0x9e, 0x02, 0xdc, 0xde, 0xf7, 0x2f,
	0x27, 0xe3, 0xef, 0x0c, 0xc6, 0x66, 0x4d, 0x7f, 0x5b, 0x63, 0xa7, 0x8b, 0xb0, 0x7b, 0x4d, 0x63,
	0xad, 0xe9, 0x4f, 0x83, 0x7a, 0xf4, 0x05, 0x61, 0x0c, 0xc1, 0x2b, 0x36, 0xdb, 0x67, 0x67, 0x79,
	0xde, 0x98, 0x32, 0x07, 0x6e, 0xbc, 0xe7, 0xe4, 0xb9, 0x83, 0x47, 0x3c, 0xfe, 0x00, 0x0e, 0x95,
	0x82, 0x47, 0x00, 0xed, 0xae, 0xed, 0x64, 0xa5, 0x19, 0x3d, 0x2a, 0x98, 0x8d, 0xd3, 0x25, 0x51,
	0x71, 0xc7, 0xc2, 0xc7, 0xe0, 0xe5, 0x59, 0x97, 0x51, 0xcc, 0xa2, 0x15, 0x0f, 0xb1, 0xc1, 0x88,
	0x7f, 0x30, 0x70, 0x7b, 0x71, 0x98, 0x8a, 0xfd, 0x61, 0x2a, 0xeb, 0xf7, 0xa9, 0xda, 0xe2, 0xa6,
	0x9f, 0xd4, 0x16, 0x84, 0xf1, 0x10, 0x46, 0x85, 0x6e, 0x7d, 0x64, 0xaa, 0xec, 0xaf, 0x4c, 0x6f,
	0x4b, 0x27, 0x3b, 0x7c, 0x01, 0xfe, 0x7f, 0xf5, 0x78, 0xfc, 0x04, 0xbc, 0xfd, 0x97, 0x8d, 0x0f,
	0xc0, 0x3f, 0x5f, 0x2c, 0xae, 0x3e, 0xbe, 0xb9, 0xb8, 0x9c, 0x4f, 0xef, 0xe1, 0x04, 0x80, 0xe8,
	0xfb, 0xb7, 0x67, 0x62, 0x3e, 0x65, 0x2b, 0x97, 0xfe, 0x84, 0x4f, 0x7f, 0x05, 0x00, 0x00, 0xff,
	0xff, 0x71, 0x1e, 0x4d, 0xe3, 0x99, 0x03, 0x00, 0x00,
}
